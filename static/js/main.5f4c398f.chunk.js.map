{"version":3,"sources":["api/index.js","hooks/useWeather.jsx","components/Search.jsx","components/DayCard.jsx","components/DaysList.jsx","components/AppContainer.jsx","components/Fonts.jsx","App.jsx","index.jsx"],"names":["api","axios","create","baseURL","process","WeatherContext","createContext","useWeather","useContext","WeatherProvider","children","useState","weather","setWeather","isLoading","setLoading","error","setError","city","setCity","value","getWeather","citySearched","unit","a","get","data","coord","lat","lon","name","dailyWeather","daily","map","day","i","filter","Provider","Search","setUnit","onSubmit","e","preventDefault","spacing","placeholder","variant","onChange","target","type","ml","aria-label","colorScheme","icon","direction","DayCard","temp","humidity","dt","dayTemp","maxTemp","max","minTemp","min","morningTemp","morn","nightTemp","night","mainWeather","main","align","border","borderColor","shadow","py","px","borderRadius","color","format","Date","src","alt","fontSize","toFixed","DaysList","maxTempArr","minTempArr","maxTemperature","Math","minTemperature","averageTemperature","textAlign","thickness","speed","emptyColor","size","as","justify","pt","columns","AppContainer","maxW","margin","Fonts","styles","theme","extendTheme","fonts","body","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f4c398f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst defaultOptions = {\r\n  baseURL: process.env.REACT_APP_BASE_API_URL,\r\n};\r\n\r\nconst api = axios.create(defaultOptions);\r\n\r\nexport default api;\r\n","import { useState, useContext, createContext } from 'react';\r\nimport api from '../api';\r\n\r\nconst WeatherContext = createContext(null);\r\n\r\nexport function useWeather() {\r\n  return useContext(WeatherContext);\r\n}\r\n\r\nexport function WeatherProvider({ children }) {\r\n  const [weather, setWeather] = useState(null);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [city, setCity] = useState('');\r\n\r\n  const getWeather = async (citySearched, unit) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const {\r\n        data: {\r\n          city: {\r\n            coord: { lat, lon },\r\n            name,\r\n          },\r\n        },\r\n      } = await api.get(\r\n        `/forecast?q=${citySearched}&&appid=${process.env.REACT_APP_API_KEY}`\r\n      );\r\n\r\n      setCity(name);\r\n\r\n      const { data } = await api.get(\r\n        `/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly&units=${unit}&cnt=5&appid=${process.env.REACT_APP_API_KEY}`\r\n      );\r\n\r\n      const dailyWeather = data.daily\r\n        .map((day, i) => {\r\n          if (i >= 5) return null;\r\n          return day;\r\n        })\r\n        .filter((day) => day !== null);\r\n\r\n      setWeather(dailyWeather);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err);\r\n      setLoading(false);\r\n      setWeather(null);\r\n      setCity('');\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    weather,\r\n    getWeather,\r\n    isLoading,\r\n    error,\r\n    city,\r\n  };\r\n\r\n  return (\r\n    <WeatherContext.Provider value={value}>{children}</WeatherContext.Provider>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport {\r\n  InputGroup,\r\n  Input,\r\n  IconButton,\r\n  Stack,\r\n  Radio,\r\n  RadioGroup,\r\n} from '@chakra-ui/react';\r\nimport { SearchIcon } from '@chakra-ui/icons';\r\nimport { useWeather } from '../hooks/useWeather';\r\n\r\nfunction Search() {\r\n  const [unit, setUnit] = useState('standard');\r\n  const [city, setCity] = useState('');\r\n  const { getWeather } = useWeather();\r\n\r\n  const handleCityChange = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getWeather(city, unit);\r\n    setCity('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Stack spacing={6}>\r\n        <InputGroup>\r\n          <Input\r\n            placeholder='Enter city name'\r\n            variant='flushed'\r\n            onChange={handleCityChange}\r\n            value={city}\r\n          />\r\n          <IconButton\r\n            type='submit'\r\n            ml='10px'\r\n            aria-label='search'\r\n            colorScheme='pink'\r\n            icon={<SearchIcon />}\r\n          />\r\n        </InputGroup>\r\n        <RadioGroup onChange={setUnit} value={unit}>\r\n          <Stack direction='row'>\r\n            <Radio value='standard'>Fahrenheit</Radio>\r\n            <Radio value='metric'>Celsius</Radio>\r\n          </Stack>\r\n        </RadioGroup>\r\n      </Stack>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { Image, Flex, Text } from '@chakra-ui/react';\r\nimport { format } from 'date-fns';\r\n\r\nfunction DayCard({ day }) {\r\n  const { temp, humidity, dt, weather } = day;\r\n\r\n  const {\r\n    day: dayTemp,\r\n    max: maxTemp,\r\n    min: minTemp,\r\n    morn: morningTemp,\r\n    night: nightTemp,\r\n  } = temp;\r\n\r\n  const { icon, main: mainWeather } = weather[0];\r\n\r\n  return (\r\n    <Flex\r\n      direction='column'\r\n      align='center'\r\n      border='1px solid'\r\n      borderColor='pink.100'\r\n      shadow='md'\r\n      py='4'\r\n      px='2'\r\n      borderRadius='md'\r\n    >\r\n      <Text color='gray.500'>\r\n        {format(new Date(dt * 1000), 'EEEE, do MMM')}\r\n      </Text>\r\n      <Text color='gray.500'>{mainWeather}</Text>\r\n      <Image\r\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        alt={mainWeather}\r\n      />\r\n      <Text fontSize='2xl'>\r\n        {dayTemp.toFixed(1)}\r\n        <sup>o</sup>\r\n      </Text>\r\n      <Text fontSize='lg'>\r\n        morning: {morningTemp}\r\n        <sup>o</sup>\r\n      </Text>\r\n      <Text fontSize='lg'>\r\n        night: {nightTemp}\r\n        <sup>o</sup>\r\n      </Text>\r\n      <Text fontSize='lg'>\r\n        min: {minTemp}\r\n        <sup>o</sup>\r\n      </Text>\r\n      <Text fontSize='lg'>\r\n        max: {maxTemp}\r\n        <sup>o</sup>\r\n      </Text>\r\n      <Text fontSize='lg'>humidity: {humidity}%</Text>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default DayCard;\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Flex,\r\n  Spinner,\r\n  SimpleGrid,\r\n  Text,\r\n} from '@chakra-ui/react';\r\nimport { useWeather } from '../hooks/useWeather';\r\nimport DayCard from './DayCard';\r\n\r\nfunction DaysList() {\r\n  const { weather, isLoading, error, city } = useWeather();\r\n\r\n  const maxTempArr = weather?.map((day) => day.temp.max) || [];\r\n  const minTempArr = weather?.map((day) => day.temp.min) || [];\r\n  const maxTemperature = Math.max(...maxTempArr);\r\n  const minTemperature = Math.min(...minTempArr);\r\n  const averageTemperature = (maxTemperature + minTemperature) / 2;\r\n\r\n  return (\r\n    <Box py='10' textAlign='center'>\r\n      {isLoading ? (\r\n        <Spinner\r\n          thickness='4px'\r\n          speed='0.65s'\r\n          emptyColor='gray.200'\r\n          color='pink.500'\r\n          size='xl'\r\n        />\r\n      ) : (\r\n        <>\r\n          {error ? (\r\n            <Heading size='md' textAlign='center' as='h3'>\r\n              There no such city, try again with valid city name.\r\n            </Heading>\r\n          ) : (\r\n            weather && (\r\n              <>\r\n                <Heading size='md' textAlign='center' as='h3'>\r\n                  Daily temperature for {city}\r\n                </Heading>\r\n                <Flex\r\n                  justify='center'\r\n                  direction={['column', 'column', 'row']}\r\n                  pt='6'\r\n                >\r\n                  <Text px='2'>\r\n                    Min temperature: {minTemperature.toFixed(1)}\r\n                    <sup>o</sup>\r\n                  </Text>\r\n                  <Text px='2'>\r\n                    Average temperature: {averageTemperature.toFixed(1)}\r\n                    <sup>o</sup>\r\n                  </Text>\r\n                  <Text px='2'>\r\n                    Max temperature: {maxTemperature.toFixed(1)}\r\n                    <sup>o</sup>\r\n                  </Text>\r\n                </Flex>\r\n                <SimpleGrid columns={['1', '2', '3', '5']} spacing='4' py='10'>\r\n                  {weather?.map((day) => {\r\n                    return <DayCard key={day.dt} day={day} />;\r\n                  })}\r\n                </SimpleGrid>\r\n              </>\r\n            )\r\n          )}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DaysList;\r\n","import { Container, Box } from '@chakra-ui/react';\r\n\r\nimport Search from './Search';\r\nimport DaysList from './DaysList';\r\n\r\nfunction AppContainer() {\r\n  return (\r\n    <Container maxW='container.xl' pt='50px'>\r\n      <Box maxW='600px' margin='auto'>\r\n        <Search />\r\n      </Box>\r\n      <DaysList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AppContainer;\r\n","import { Global } from '@emotion/react';\r\n\r\nfunction Fonts() {\r\n  return (\r\n    <Global\r\n      styles={`\r\n  /*cyrillic-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 300;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fCRc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\r\n    }\r\n    /* cyrillic */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 300;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fABc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\r\n    }\r\n    /* greek-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 300;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fCBc4EsA.woff2) format('woff2');\r\n      unicode-range: U+1F00-1FFF;\r\n    }\r\n    /* greek */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 300;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fBxc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0370-03FF;\r\n    }\r\n    /* vietnamese */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 300;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fCxc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\r\n    }\r\n    /* latin-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 300;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fChc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n    }\r\n    /* latin */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 300;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5fBBc4.woff2) format('woff2');\r\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n    }\r\n    /* cyrillic-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu72xKOzY.woff2) format('woff2');\r\n      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\r\n    }\r\n    /* cyrillic */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu5mxKOzY.woff2) format('woff2');\r\n      unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\r\n    }\r\n    /* greek-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu7mxKOzY.woff2) format('woff2');\r\n      unicode-range: U+1F00-1FFF;\r\n    }\r\n    /* greek */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu4WxKOzY.woff2) format('woff2');\r\n      unicode-range: U+0370-03FF;\r\n    }\r\n    /* vietnamese */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu7WxKOzY.woff2) format('woff2');\r\n      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\r\n    }\r\n    /* latin-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu7GxKOzY.woff2) format('woff2');\r\n      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n    }\r\n    /* latin */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Mu4mxK.woff2) format('woff2');\r\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n    }\r\n    /* cyrillic-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 500;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fCRc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\r\n    }\r\n    /* cyrillic */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 500;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fABc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\r\n    }\r\n    /* greek-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 500;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fCBc4EsA.woff2) format('woff2');\r\n      unicode-range: U+1F00-1FFF;\r\n    }\r\n    /* greek */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 500;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fBxc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0370-03FF;\r\n    }\r\n    /* vietnamese */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 500;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fCxc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\r\n    }\r\n    /* latin-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 500;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fChc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n    }\r\n    /* latin */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 500;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9fBBc4.woff2) format('woff2');\r\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n    }\r\n    /* cyrillic-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 700;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfCRc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\r\n    }\r\n    /* cyrillic */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 700;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfABc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\r\n    }\r\n    /* greek-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 700;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfCBc4EsA.woff2) format('woff2');\r\n      unicode-range: U+1F00-1FFF;\r\n    }\r\n    /* greek */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 700;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfBxc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0370-03FF;\r\n    }\r\n    /* vietnamese */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 700;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfCxc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\r\n    }\r\n    /* latin-ext */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 700;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfChc4EsA.woff2) format('woff2');\r\n      unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\r\n    }\r\n    /* latin */\r\n    @font-face {\r\n      font-family: 'Roboto';\r\n      font-style: normal;\r\n      font-weight: 700;\r\n      font-display: swap;\r\n      src: url(https://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlfBBc4.woff2) format('woff2');\r\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n    }\r\n  `}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Fonts;\r\n","import { ChakraProvider, CSSReset, extendTheme } from '@chakra-ui/react';\nimport { WeatherProvider } from './hooks/useWeather';\nimport AppContainer from './components/AppContainer';\nimport Fonts from './components/Fonts';\n\nconst theme = extendTheme({\n  fonts: {\n    body: 'Roboto',\n  },\n});\n\nfunction App() {\n  return (\n    <WeatherProvider>\n      <ChakraProvider theme={theme}>\n        <CSSReset />\n        <Fonts />\n        <AppContainer />\n      </ChakraProvider>\n    </WeatherProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}